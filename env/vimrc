set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-sensible'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'scrooloose/nerdcommenter.git'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-scripts/ScrollColors'
Plugin 'tpope/vim-rails'
Plugin 'mileszs/ack.vim'
Plugin 'sjl/gundo.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'kana/vim-textobj-user'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'tpope/vim-rvm'
Plugin 'tpope/vim-endwise'
Plugin 'gcmt/taboo.vim'
Plugin 'scrooloose/syntastic'
Plugin 'thoughtbot/vim-rspec'

call vundle#end()

"" Whitespace
set nowrap
set tabstop=2 shiftwidth=2
set expandtab

"" Searching
set hlsearch
set ignorecase
set smartcase

"" Misc
set encoding=utf-8
set number
set directory=$HOME/.vim/swapfiles//
set splitright
set splitbelow
let mapleader=","
colorscheme darkblue
syntax on

"" ctrlp.vim
let g:ctrlp_show_hidden = 1
let g:ctrlp_working_path_mode = 0

"" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1

"" taboo.vim
let g:taboo_tabline = 0

"" vim-airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0

"" ack.vim
let g:ackhighlight = 1
let g:ack_default_options = " -s -H --nocolor --nogroup --column --smart-case --follow"

"" *** KEYMAPS ***
noremap <Leader>n :set invnumber<CR>
noremap <Left>  <NOP>
noremap <Right> <NOP>
noremap <Up>    <NOP>
noremap <Down>  <NOP>
noremap <Leader>; :bp<CR>
noremap <Leader>' :bn<CR>
noremap <Leader>w <C-w>w
nnoremap <Leader>h :noh<CR>
nnoremap <Leader>s :sh<CR>
nnoremap <Leader>cd :lcd %:p:h<CR>:pwd<CR>
noremap <Leader>[ :tabprev<CR>
noremap <Leader>] :tabnext<CR>
nnoremap <Leader>qq :only<CR>
noremap <Leader><Tab> :tabe<CR>:lcd<space>
nnoremap <Leader>vimrc :tabe $MYVIMRC<CR>
noremap <Leader>P "0P
noremap <Leader>p "0p
nnoremap <Leader>v :vs<CR><C-w>=
nnoremap <Leader>ww <C-w>H<C-w>=

"" nerdtree
noremap <Leader>t :NERDTreeFind<CR>
noremap <Leader>tt :NERDTreeToggle<CR>

"" nerdcommenter
map <Leader>/ <Plug>NERDCommenterToggle
map <Leader>// <Plug>NERDCommenterYank
map <Leader>/// <Plug>NERDCommenterAlignLeft

"" gundo.vim
nnoremap <Leader>u :GundoToggle<CR>

"" ack.vim
noremap <Leader>f :Ack<space>
noremap <Leader>fw :Ack "<cword>"<CR>
nnoremap <Leader>m :Ack "<<<"<CR>

"" vim-fugitive
nnoremap <Leader>gd :Gdiff<CR>
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gl: :Glog<CR>

"" vim-rails
nnoremap <Leader>a :A<CR>

"" vim-rvm
nnoremap <Leader>rv :Rvm use<CR>

"" vim-trailing-whitespace
nnoremap <Leader>dw :FixWhitespace<CR>

"" vim-rspec
noremap <Leader>r :call RunCurrentSpecFile()<CR>
noremap <Leader>rr :call RunNearestSpec()<CR>
noremap <Leader>l :call RunLastSpec()<CR>
noremap <Leader>ra :call RunAllSpecs()<CR>

"" syntastic
noremap <Leader>sx :SyntasticToggleMode<CR>

"" *** AUTOMATIC GROUPS ***
augroup reload_vimrc " {
  au!
  au BufWritePost $MYVIMRC source $MYVIMRC | AirlineRefresh
augroup END " }
